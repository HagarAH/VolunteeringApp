// Generated by view binder compiler. Do not edit!
package com.mobil.bizden.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mobil.bizden.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhoneVerifyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonNextOtp;

  @NonNull
  public final EditText editTextPhoneNumber;

  @NonNull
  public final EditText editTextSmsCode;

  @NonNull
  public final FrameLayout fragmentContainer;

  private ActivityPhoneVerifyBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonNextOtp, @NonNull EditText editTextPhoneNumber,
      @NonNull EditText editTextSmsCode, @NonNull FrameLayout fragmentContainer) {
    this.rootView = rootView;
    this.buttonNextOtp = buttonNextOtp;
    this.editTextPhoneNumber = editTextPhoneNumber;
    this.editTextSmsCode = editTextSmsCode;
    this.fragmentContainer = fragmentContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhoneVerifyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhoneVerifyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_phone_verify, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhoneVerifyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonNextOtp;
      Button buttonNextOtp = ViewBindings.findChildViewById(rootView, id);
      if (buttonNextOtp == null) {
        break missingId;
      }

      id = R.id.editTextPhoneNumber;
      EditText editTextPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (editTextPhoneNumber == null) {
        break missingId;
      }

      id = R.id.editTextSmsCode;
      EditText editTextSmsCode = ViewBindings.findChildViewById(rootView, id);
      if (editTextSmsCode == null) {
        break missingId;
      }

      id = R.id.fragmentContainer;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      return new ActivityPhoneVerifyBinding((ConstraintLayout) rootView, buttonNextOtp,
          editTextPhoneNumber, editTextSmsCode, fragmentContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
