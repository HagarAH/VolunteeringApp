// Generated by view binder compiler. Do not edit!
package com.mobil.bizden.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.mobil.bizden.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRequestsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final MaterialButton atimePickerButtonArrival;

  @NonNull
  public final Button btnConfirm;

  @NonNull
  public final TextView dot;

  @NonNull
  public final MaterialButton dtimePickerButton;

  @NonNull
  public final TextView idTVHeading;

  @NonNull
  public final TextView idTVHeadingArrival;

  @NonNull
  public final EditText idTVSelectedTime;

  @NonNull
  public final EditText idTVSelectedTimeArrival;

  @NonNull
  public final TextView tvAddress;

  @NonNull
  public final TextView tvCapacityS;

  @NonNull
  public final TextView tvInfo;

  @NonNull
  public final TextView tvLocationS;

  @NonNull
  public final TextView tvNameS;

  @NonNull
  public final TextView tvOrgS;

  private FragmentRequestsBinding(@NonNull FrameLayout rootView,
      @NonNull MaterialButton atimePickerButtonArrival, @NonNull Button btnConfirm,
      @NonNull TextView dot, @NonNull MaterialButton dtimePickerButton,
      @NonNull TextView idTVHeading, @NonNull TextView idTVHeadingArrival,
      @NonNull EditText idTVSelectedTime, @NonNull EditText idTVSelectedTimeArrival,
      @NonNull TextView tvAddress, @NonNull TextView tvCapacityS, @NonNull TextView tvInfo,
      @NonNull TextView tvLocationS, @NonNull TextView tvNameS, @NonNull TextView tvOrgS) {
    this.rootView = rootView;
    this.atimePickerButtonArrival = atimePickerButtonArrival;
    this.btnConfirm = btnConfirm;
    this.dot = dot;
    this.dtimePickerButton = dtimePickerButton;
    this.idTVHeading = idTVHeading;
    this.idTVHeadingArrival = idTVHeadingArrival;
    this.idTVSelectedTime = idTVSelectedTime;
    this.idTVSelectedTimeArrival = idTVSelectedTimeArrival;
    this.tvAddress = tvAddress;
    this.tvCapacityS = tvCapacityS;
    this.tvInfo = tvInfo;
    this.tvLocationS = tvLocationS;
    this.tvNameS = tvNameS;
    this.tvOrgS = tvOrgS;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRequestsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRequestsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_requests, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRequestsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.atimePickerButtonArrival;
      MaterialButton atimePickerButtonArrival = ViewBindings.findChildViewById(rootView, id);
      if (atimePickerButtonArrival == null) {
        break missingId;
      }

      id = R.id.btnConfirm;
      Button btnConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirm == null) {
        break missingId;
      }

      id = R.id.dot;
      TextView dot = ViewBindings.findChildViewById(rootView, id);
      if (dot == null) {
        break missingId;
      }

      id = R.id.dtimePickerButton;
      MaterialButton dtimePickerButton = ViewBindings.findChildViewById(rootView, id);
      if (dtimePickerButton == null) {
        break missingId;
      }

      id = R.id.idTVHeading;
      TextView idTVHeading = ViewBindings.findChildViewById(rootView, id);
      if (idTVHeading == null) {
        break missingId;
      }

      id = R.id.idTVHeadingArrival;
      TextView idTVHeadingArrival = ViewBindings.findChildViewById(rootView, id);
      if (idTVHeadingArrival == null) {
        break missingId;
      }

      id = R.id.idTVSelectedTime;
      EditText idTVSelectedTime = ViewBindings.findChildViewById(rootView, id);
      if (idTVSelectedTime == null) {
        break missingId;
      }

      id = R.id.idTVSelectedTimeArrival;
      EditText idTVSelectedTimeArrival = ViewBindings.findChildViewById(rootView, id);
      if (idTVSelectedTimeArrival == null) {
        break missingId;
      }

      id = R.id.tvAddress;
      TextView tvAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvAddress == null) {
        break missingId;
      }

      id = R.id.tvCapacityS;
      TextView tvCapacityS = ViewBindings.findChildViewById(rootView, id);
      if (tvCapacityS == null) {
        break missingId;
      }

      id = R.id.tvInfo;
      TextView tvInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvInfo == null) {
        break missingId;
      }

      id = R.id.tvLocationS;
      TextView tvLocationS = ViewBindings.findChildViewById(rootView, id);
      if (tvLocationS == null) {
        break missingId;
      }

      id = R.id.tvNameS;
      TextView tvNameS = ViewBindings.findChildViewById(rootView, id);
      if (tvNameS == null) {
        break missingId;
      }

      id = R.id.tvOrgS;
      TextView tvOrgS = ViewBindings.findChildViewById(rootView, id);
      if (tvOrgS == null) {
        break missingId;
      }

      return new FragmentRequestsBinding((FrameLayout) rootView, atimePickerButtonArrival,
          btnConfirm, dot, dtimePickerButton, idTVHeading, idTVHeadingArrival, idTVSelectedTime,
          idTVSelectedTimeArrival, tvAddress, tvCapacityS, tvInfo, tvLocationS, tvNameS, tvOrgS);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
