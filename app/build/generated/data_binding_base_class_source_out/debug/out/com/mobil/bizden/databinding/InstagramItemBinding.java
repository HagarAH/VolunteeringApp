// Generated by view binder compiler. Do not edit!
package com.mobil.bizden.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mobil.bizden.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InstagramItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView caption;

  @NonNull
  public final ImageButton commentButton;

  @NonNull
  public final LinearLayout commentSection;

  @NonNull
  public final ImageButton likeButton;

  @NonNull
  public final ImageView postImage;

  @NonNull
  public final ImageView postImage1;

  @NonNull
  public final ImageButton shareButton;

  @NonNull
  public final TextView username;

  private InstagramItemBinding(@NonNull LinearLayout rootView, @NonNull TextView caption,
      @NonNull ImageButton commentButton, @NonNull LinearLayout commentSection,
      @NonNull ImageButton likeButton, @NonNull ImageView postImage, @NonNull ImageView postImage1,
      @NonNull ImageButton shareButton, @NonNull TextView username) {
    this.rootView = rootView;
    this.caption = caption;
    this.commentButton = commentButton;
    this.commentSection = commentSection;
    this.likeButton = likeButton;
    this.postImage = postImage;
    this.postImage1 = postImage1;
    this.shareButton = shareButton;
    this.username = username;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InstagramItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InstagramItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.instagram_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InstagramItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.caption;
      TextView caption = ViewBindings.findChildViewById(rootView, id);
      if (caption == null) {
        break missingId;
      }

      id = R.id.commentButton;
      ImageButton commentButton = ViewBindings.findChildViewById(rootView, id);
      if (commentButton == null) {
        break missingId;
      }

      id = R.id.commentSection;
      LinearLayout commentSection = ViewBindings.findChildViewById(rootView, id);
      if (commentSection == null) {
        break missingId;
      }

      id = R.id.likeButton;
      ImageButton likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.postImage;
      ImageView postImage = ViewBindings.findChildViewById(rootView, id);
      if (postImage == null) {
        break missingId;
      }

      id = R.id.postImage;
      ImageView postImage1 = ViewBindings.findChildViewById(rootView, id);
      if (postImage1 == null) {
        break missingId;
      }

      id = R.id.shareButton;
      ImageButton shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new InstagramItemBinding((LinearLayout) rootView, caption, commentButton,
          commentSection, likeButton, postImage, postImage1, shareButton, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
